Group member: Evelyn Chen (UID:704332587), Han Wang(UID:104547543)
â€¦
1C Description:

1. We edit main.c to have the if else statement of time_travel variable. If time_travel is true, then we execute commands with parallels for the ones with dependencies.
2. We declare a function in execute-command.c called execute_graph which executes no dependency queue then dependency queue. To execute no dependency queue, go through each graph node in the queue and fork. Execute commands for each command tree.
3. To execute dependency queue, we go through each graph node in dependency queue, for each graph node, we execute the before list command trees.
4. We create the graph inside read-command.c. We process the command, then create a graph node to store command tree. Then, we createa a list node with graph node, write list, and read list. At the end of create_graph function, we check the before list, and update the dependency graph accordingly.
5. We implement process_command in read-command.c by passing in node, command, read list, and write list. If it's a simple command, we store input and word[1],word[2]...to read list while filtering out the option with dash. We store the output to write list.
6. In process_command function, if the command is subshell, we store input to read list and output to write list.
7. In process_command function, if the command is neither simple nor subshell, then we process the left command, then the right command. 
